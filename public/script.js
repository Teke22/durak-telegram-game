const tg = window.Telegram.WebApp;
tg.expand();
tg.enableClosingConfirmation();

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã URL
const urlParams = new URLSearchParams(window.location.search);
const mode = urlParams.get('mode') || 'bot';

console.log('üéÆ Game mode:', mode);
console.log('üì± Telegram WebApp version:', tg.version);

// –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–≥—Ä—É–∑–∫–µ
const gameBoard = document.getElementById('game-board');
const startButton = document.getElementById('start-game');

gameBoard.innerHTML = `
    <div style="text-align: center; padding: 20px;">
        <h2>üé¥ –ü–æ–¥–∫–∏–¥–Ω–æ–π –¥—É—Ä–∞–∫</h2>
        <p>–†–µ–∂–∏–º: ${mode === 'bot' ? '–ø—Ä–æ—Ç–∏–≤ –±–æ—Ç–∞' : '–º—É–ª—å—Ç–∏–ø–ª–µ–µ—Ä'}</p>
        <p>–ó–∞–≥—Ä—É–∑–∫–∞ –∏–≥—Ä—ã...</p>
    </div>
`;

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–µ—Ä–∞
async function checkServerHealth() {
    try {
        const response = await fetch('/health');
        const data = await response.json();
        console.log('‚úÖ Server health:', data);
        return true;
    } catch (error) {
        console.error('‚ùå Server health check failed:', error);
        return false;
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏–≥—Ä—ã
async function initGame() {
    const isServerHealthy = await checkServerHealth();
    
    if (!isServerHealthy) {
        gameBoard.innerHTML = `
            <div style="text-align: center; padding: 20px; color: #ff4444;">
                <h2>‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è</h2>
                <p>–°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.</p>
            </div>
        `;
        return;
    }

    tg.HapticFeedback.impactOccurred('light');
    startButton.style.display = 'none';
    
    // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –≤–∞—à–∞ –∏–≥—Ä–æ–≤–∞—è –ª–æ–≥–∏–∫–∞
    gameBoard.innerHTML = `
        <div style="text-align: center; padding: 20px;">
            <h2>üéÆ –ò–≥—Ä–∞ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è!</h2>
            <p>–†–µ–∂–∏–º: ${mode === 'bot' ? '–ø—Ä–æ—Ç–∏–≤ –±–æ—Ç–∞' : '—Å –¥—Ä—É–≥–æ–º'}</p>
            <div class="trump-card" style="font-size: 24px; margin: 20px;">‚ô†Ô∏è</div>
            <p>–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ä—Ç—É –¥–ª—è –Ω–∞—á–∞–ª–∞ –∏–≥—Ä—ã</p>
        </div>
    `;
    
    // –ó–¥–µ—Å—å –¥–æ–±–∞–≤—å—Ç–µ –≤–∞—à—É –∏–≥—Ä–æ–≤—É—é –ª–æ–≥–∏–∫—É –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
}

// –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É —Å—Ç–∞—Ä—Ç–∞
if (mode === 'bot') {
    startButton.style.display = 'block';
    startButton.textContent = 'üéÆ –ù–∞—á–∞—Ç—å –∏–≥—Ä—É —Å –±–æ—Ç–æ–º';
    startButton.addEventListener('click', initGame);
} else {
    gameBoard.innerHTML = `
        <div style="text-align: center; padding: 20px;">
            <h2>üë• –ò–≥—Ä–∞ —Å –¥—Ä—É–≥–æ–º</h2>
            <p>–≠—Ç–æ—Ç —Ä–µ–∂–∏–º –ø–æ–∫–∞ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ</p>
            <p>–°–∫–æ—Ä–æ –º–æ–∂–Ω–æ –±—É–¥–µ—Ç –∏–≥—Ä–∞—Ç—å —Å –¥—Ä—É–∑—å—è–º–∏!</p>
        </div>
    `;
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–µ—Ä–≤–µ—Ä –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
checkServerHealth();